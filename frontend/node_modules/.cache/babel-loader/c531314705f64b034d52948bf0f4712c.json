{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/mesto-react/react_mesto/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.putLike(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(item => item !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleUpdateUser(userData) {\n    api.setUserInfo(userData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.updateUserAvatar(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addUserCard(data).then(() => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"areYouSureToDelete\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          submitName: \"\\u0414\\u0430\",\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c3cL1C6hDl6R4Cv/3m4WCPHiTus=\");\n\n_c = App;\nexport default App;\n/*<PopupWithForm \n      name=\"update-avatar\" \n      title=\"Обновить аватар\"\n      submitName=\"Сохранить\"\n      isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          id=\"avatar-link\"\n          name=\"avatar\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input popup__avatar-link\"\n          required />\n        <span className=\"popup__error popup__error_visible avatar-link-error\"></span>\n      </PopupWithForm>\n\n          <PopupWithForm \n      name=\"popup-profile\" \n      title=\"Редактировать профиль\"\n      submitName=\"Сохранить\"\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          required\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          className=\"popup__input\"\n          placeholder=\"Имя\" />\n        <span className=\"popup__error popup__error_visible name-error\" />\n        <input\n          required\n          id=\"job\"\n          name=\"about\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          className=\"popup__input\"\n          placeholder=\"Профессиональная деятельность\" />\n        <span className=\"popup__error popup__error_visible job-error\" />\n      </PopupWithForm>\n\n            <PopupWithForm \n      name=\"popup-AddPicture\" \n      title=\"Новое место\"\n      submitName=\"Создать\"\n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          id=\"nameOfPicture\"\n          name=\"name\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          placeholder=\"Название\"\n          className=\"popup__input\"\n          required />\n        <span className=\"popup__error popup__error_visible nameOfPicture-error\" />\n        <input\n          id=\"linkOfPicture\"\n          name=\"link\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input\"\n          required />\n        <span id=\"spanOfPicture\" className=\"popup__error popup__error_visible linkOfPicture-error\" />\n      </PopupWithForm>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","api","CurrentUserContext","App","cards","setCards","useState","currentUser","setCurrentUser","useEffect","getInitialCards","then","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","putLike","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","getUserInfo","data","handleUpdateUser","userData","setUserInfo","closeAllPopups","handleUpdateAvatar","updateUserAvatar","handleAddPlaceSubmit","addUserCard","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","handleCardClick","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nimport {api} from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  React.useEffect(() => {\n    api.getInitialCards()\n    .then((cards) => {\n      setCards(cards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  },[]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.putLike(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  } \n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n        .then(() => {\n            setCards((state) => state.filter((item) => item !== card))\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((data) => {\n      setCurrentUser(data);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  },[]);\n\nfunction handleUpdateUser(userData) {\n  api.setUserInfo(userData)\n      .then((data) => {\n          setCurrentUser(data);\n          closeAllPopups();\n      })\n      .catch((err) => {\n          console.log(err)\n      })\n}\n\nfunction handleUpdateAvatar(data) {\n  api.updateUserAvatar(data)\n     .then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n     })\n     .catch((err) => {\n      console.log(err)\n    })\n}\n\nfunction handleAddPlaceSubmit(data) {\n  api.addUserCard(data)\n      .then(() => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n}\n\nconst [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\nconst [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\nconst [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\nconst [selectedCard, setSelectedCard] = React.useState({});\n\n\nfunction handleCardClick(card) {\n  setSelectedCard(card);\n}\n\nfunction handleEditProfileClick() {\n  setIsEditProfilePopupOpen(true);\n}\n\nfunction handleAddPlaceClick() {\n  setIsAddPlacePopupOpen(true);\n}\n\nfunction handleEditAvatarClick() {\n  setIsEditAvatarPopupOpen(true);\n}\n\nfunction closeAllPopups() {\n setIsEditAvatarPopupOpen(false); \n setIsAddPlacePopupOpen(false);\n setIsEditProfilePopupOpen(false);\n setSelectedCard({});\n}\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"body\">\n    <div className=\"page\">\n      <Header />\n      <Main\n      onEditProfile={handleEditProfileClick}\n      onAddPlace={handleAddPlaceClick}\n      onEditAvatar={handleEditAvatarClick} \n      onCardClick={handleCardClick}\n      onCardLike={handleCardLike}\n      onCardDelete={handleCardDelete}\n      cards={cards}\n      />\n      <Footer />\n\n      <AddPlacePopup \n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      onAddPlace={handleAddPlaceSubmit}/>\n\n      <EditProfilePopup \n      isOpen={isEditProfilePopupOpen} \n      onClose={closeAllPopups} \n      onUpdateUser={handleUpdateUser}/>\n\n      <EditAvatarPopup \n      isOpen={isEditAvatarPopupOpen} \n      onClose={closeAllPopups} \n      onUpdateAvatar={handleUpdateAvatar}/> \n\n      <PopupWithForm \n      name=\"areYouSureToDelete\"\n      title=\"Вы уверены?\"\n      submitName=\"Да\"\n      onClose={closeAllPopups}\n      />\n      <ImagePopup \n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n\n\n/*<PopupWithForm \n      name=\"update-avatar\" \n      title=\"Обновить аватар\"\n      submitName=\"Сохранить\"\n      isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          id=\"avatar-link\"\n          name=\"avatar\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input popup__avatar-link\"\n          required />\n        <span className=\"popup__error popup__error_visible avatar-link-error\"></span>\n      </PopupWithForm>\n\n          <PopupWithForm \n      name=\"popup-profile\" \n      title=\"Редактировать профиль\"\n      submitName=\"Сохранить\"\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          required\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          className=\"popup__input\"\n          placeholder=\"Имя\" />\n        <span className=\"popup__error popup__error_visible name-error\" />\n        <input\n          required\n          id=\"job\"\n          name=\"about\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          className=\"popup__input\"\n          placeholder=\"Профессиональная деятельность\" />\n        <span className=\"popup__error popup__error_visible job-error\" />\n      </PopupWithForm>\n\n            <PopupWithForm \n      name=\"popup-AddPicture\" \n      title=\"Новое место\"\n      submitName=\"Создать\"\n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}>\n        <input\n          id=\"nameOfPicture\"\n          name=\"name\"\n          type=\"text\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          placeholder=\"Название\"\n          className=\"popup__input\"\n          required />\n        <span className=\"popup__error popup__error_visible nameOfPicture-error\" />\n        <input\n          id=\"linkOfPicture\"\n          name=\"link\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input\"\n          required />\n        <span id=\"spanOfPicture\" className=\"popup__error popup__error_visible linkOfPicture-error\" />\n      </PopupWithForm>\n*/"]},"metadata":{},"sourceType":"module"}