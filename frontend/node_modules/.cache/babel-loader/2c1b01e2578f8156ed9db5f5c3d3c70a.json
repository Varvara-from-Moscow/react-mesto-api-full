{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/Api';\nimport Header from './Header';\nimport MyProfile from './MyProfile';\nimport Footer from './Footer';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from './Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  const [isInfoTooltip, setIsInfoTooltip] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [showLoading, setShowLoading] = React.useState(false);\n  const [selectedCardToDelete, setSelectedCardToDelete] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    });\n  }\n\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage,\n    // эта функция проверит валидность токена\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      // проверим токен\n      Auth.getContent(jwt).then(res => {\n        if (res) {\n          // авторизуем пользователя\n          setLoggedIn({\n            loggedIn: true\n          }, () => {\n            // обернём App.js в withRouter\n            // так, что теперь есть доступ к этому методу\n            history.push(\"/my-profile\");\n          });\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    setShowLoading(true);\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(item => item !== card));\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setShowLoading(false);\n    });\n  }\n\n  function handleUpdateUser(userData) {\n    setShowLoading(true);\n    api.setUserInfo(userData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setShowLoading(false);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    setShowLoading(true);\n    api.updateUserAvatar(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setShowLoading(false);\n    });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    setShowLoading(true);\n    api.addUserCard(data).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setShowLoading(false);\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleDeleteCardClick(card) {\n    setIsDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setSelectedCard({});\n    setSelectedCardToDelete({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/my-profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/my-profile\",\n            loggedIn: loggedIn,\n            component: MyProfile,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onTrashButton: handleDeleteCardClick,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit,\n            showLoading: showLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser,\n            showLoading: showLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar,\n            showLoading: showLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {\n            isOpen: isDeletePopupOpen,\n            onClose: closeAllPopups,\n            onCardDelete: handleCardDelete,\n            showLoading: showLoading,\n            card: selectedCardToDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            onClose: closeAllPopups,\n            isOpen: isInfoTooltip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lP7FZa1Xs0MM/n15VlSxZEFn65s=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n/*\nuseEffect(() => {\n        if (loggedIn) {\n            Запрос на получение карточек\n            Запрос на получение данных о пользователе\n        }\n    }, [loggedIn]);\n\n\n\n      <Route path=\"/login\">\n            <Login  />\n      </Route>\n\n      <Route path=\"/register\">\n            <Register />\n      </Route>\n\n      <Route path=\"/my-profile\">\n        <MyProfile\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} \n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onTrashButton={handleDeleteCardClick}\n          cards={cards}/>\n      </Route>\n\n      <Route exact path=\"/\">\n      {loggedIn ? <Redirect to=\"/my-profile\" /> : <Redirect to=\"/login\" />}\n      </Route>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","useHistory","CurrentUserContext","api","Header","MyProfile","Footer","DeletePopup","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","Auth","App","cards","setCards","useState","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isInfoTooltip","setIsInfoTooltip","selectedCard","setSelectedCard","showLoading","setShowLoading","selectedCardToDelete","setSelectedCardToDelete","loggedIn","setLoggedIn","history","handleLogin","e","preventDefault","tokenCheck","jwt","localStorage","getItem","getContent","then","res","push","useEffect","getInitialCards","catch","err","console","log","getUserInfo","data","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","item","closeAllPopups","finally","handleUpdateUser","userData","setUserInfo","handleUpdateAvatar","updateUserAvatar","handleAddPlaceSubmit","addUserCard","handleCardClick","handleDeleteCardClick","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport {api} from '../utils/Api';\nimport Header from './Header';\nimport MyProfile from './MyProfile';\nimport Footer from './Footer';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from './Auth';\n\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  const [isInfoTooltip, setIsInfoTooltip] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [showLoading, setShowLoading] = React.useState(false);\n  const [selectedCardToDelete, setSelectedCardToDelete] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  function handleLogin(e){\n    e.preventDefault();\n    setLoggedIn({\n    loggedIn: true\n  })\n  } \n\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage,\n    // эта функция проверит валидность токена\n      const jwt = localStorage.getItem('jwt');\n    if (jwt){\n      // проверим токен\n      Auth.getContent(jwt).then((res) => {\n        if (res){\n                  // авторизуем пользователя\n          setLoggedIn({\n            loggedIn: true,\n          }, () => {\n                      // обернём App.js в withRouter\n                      // так, что теперь есть доступ к этому методу\n            history.push(\"/my-profile\");\n          });\n        }\n      }); \n    }\n  } \n\n  React.useEffect(() => {\n    api.getInitialCards()\n    .then((cards) => {\n      setCards(cards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  },[]);\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((data) => {\n      setCurrentUser(data);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  },[]);\n\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeStatus(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  } \n\n\n  function handleCardDelete(card) {\n    setShowLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((item) => item !== card))\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setShowLoading(false);\n    })\n  }\n\n  function handleUpdateUser(userData) {\n    setShowLoading(true);\n    api.setUserInfo(userData)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .finally(() => {\n        setShowLoading(false);\n    })\n  }\n\n  function handleUpdateAvatar(data) {\n    setShowLoading(true);\n    api.updateUserAvatar(data)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .finally(() => {\n        setShowLoading(false);\n    })\n  }\n\n  function handleAddPlaceSubmit(data) {\n    setShowLoading(true);\n    api.addUserCard(data)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .finally(() => {\n        setShowLoading(false);\n    })\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleDeleteCardClick(card) {\n    setIsDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setIsDeletePopupOpen(false)\n    setSelectedCard({})\n    setSelectedCardToDelete({})\n  }\n\n  return (\n    <Switch>\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"body\">\n    <div className=\"page\">\n      \n      <Header \n          loggedIn={loggedIn}\n      />\n\n      <Route path=\"/sign-up\">\n      </Route>\n\n      <Route path=\"/sign-in\">\n      </Route>\n\n      <Route>\n          {loggedIn ? (\n            <Redirect to=\"/my-profile\" />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n      </Route>\n\n      <Route exact path=\"/login\">\n            <Login  \n            handleLogin={handleLogin}/>\n      </Route>\n\n      <Route path=\"/register\">\n            <Register />\n      </Route>\n\n      <ProtectedRoute\n          path=\"/my-profile\"\n          loggedIn={loggedIn}\n          component={MyProfile}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} \n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onTrashButton={handleDeleteCardClick}\n          cards={cards}\n      />\n\n      <Footer />\n\n      <AddPlacePopup \n      isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      onAddPlace={handleAddPlaceSubmit}\n      showLoading={showLoading}/>\n\n      <EditProfilePopup \n      isOpen={isEditProfilePopupOpen} \n      onClose={closeAllPopups} \n      onUpdateUser={handleUpdateUser}\n      showLoading={showLoading}/>\n\n      <EditAvatarPopup \n      isOpen={isEditAvatarPopupOpen} \n      onClose={closeAllPopups} \n      onUpdateAvatar={handleUpdateAvatar}\n      showLoading={showLoading}/> \n\n      <DeletePopup \n      isOpen={isDeletePopupOpen}\n      onClose={closeAllPopups}\n      onCardDelete={handleCardDelete}\n      showLoading={showLoading}\n      card={selectedCardToDelete}/>\n\n      <ImagePopup \n      card={selectedCard}\n      onClose={closeAllPopups}\n      />\n\n      <InfoTooltip \n      onClose={closeAllPopups}\n      isOpen={isInfoTooltip}\n      />\n\n    </div>\n    </div>\n    </CurrentUserContext.Provider>\n    </Switch>\n  );\n}\nexport default App;\n\n\n/*\nuseEffect(() => {\n        if (loggedIn) {\n            Запрос на получение карточек\n            Запрос на получение данных о пользователе\n        }\n    }, [loggedIn]);\n\n\n\n      <Route path=\"/login\">\n            <Login  />\n      </Route>\n\n      <Route path=\"/register\">\n            <Register />\n      </Route>\n\n      <Route path=\"/my-profile\">\n        <MyProfile\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick} \n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onTrashButton={handleDeleteCardClick}\n          cards={cards}/>\n      </Route>\n\n      <Route exact path=\"/\">\n      {loggedIn ? <Redirect to=\"/my-profile\" /> : <Redirect to=\"/login\" />}\n      </Route>\n*/"]},"metadata":{},"sourceType":"module"}