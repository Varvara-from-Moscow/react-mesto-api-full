{"ast":null,"code":"import _classCallCheck from\"/Users/varvarakorableva/mesto-react/react_mesto/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/varvarakorableva/mesto-react/react_mesto/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(data){_classCallCheck(this,Api);this._url=data.url;this._headers=data.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"setUserInfo\",value:function setUserInfo(userData){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userData.name,about:userData.about})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"addUserCard\",value:function addUserCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"changeLikeStatus\",value:function changeLikeStatus(id,isLiked){return fetch(\"\".concat(this._url,\"/cards/\").concat(id,\"/likes\"),{method:\"\".concat(isLiked?'PUT':'DELETE'),headers:this._headers}).then(this._checkResponse);}},{key:\"updateUserAvatar\",value:function updateUserAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}}]);return Api;}();export{Api as default};var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-38',headers:{authorization:'482a243d-811c-428c-9d72-a4802c45fd09','Content-Type':'application/json'}});export{api};","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/utils/Api.js"],"names":["Api","data","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","userData","body","JSON","stringify","name","about","link","id","isLiked","avatar","api","authorization"],"mappings":"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","sourcesContent":["\nexport default class Api{\n  constructor(data){\n    this._url = data.url;\n    this._headers = data.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method:'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  setUserInfo(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method:'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  addUserCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch (`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeStatus(id, isLiked) {\n    return fetch (`${this._url}/cards/${id}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    })\n        .then(this._checkResponse);\n  }\n\n  updateUserAvatar(data) {\n    return fetch (`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n      .then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  url:'https://mesto.nomoreparties.co/v1/cohort-38',\n  headers: {\n    authorization: '482a243d-811c-428c-9d72-a4802c45fd09',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport {api};\n"]},"metadata":{},"sourceType":"module"}