{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n  if (res.status === 200) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  console.log({\n    password,\n    email\n  });\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const login = _ref2 => {\n  let {\n    password,\n    email\n  } = _ref2;\n  console.log({\n    password,\n    email\n  });\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => res.json()).then(data => {\n    // сохраняем токен\n    localStorage.setItem('token', data.token);\n  });\n};","map":{"version":3,"sources":["/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","checkResponse","res","status","json","Promise","reject","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","response","e","catch","err","login","data","localStorage","setItem","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEL,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACrB,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACC,SAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACC,MAAO,EAArC,CAAP;AACH;;AAGH,OAAO,MAAMI,QAAQ,GAAG,QAAyB;AAAA,MAAvB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAuB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAZ;AACA,SAAOG,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AACjCa,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAN2B,GAAvB,CAAL,CAWNS,IAXM,CAWAC,QAAD,IAAc;AAClB,QAAI;AACF,UAAIA,QAAQ,CAAChB,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,eAAOgB,QAAQ,CAACf,IAAT,EAAP;AACD;AACF,KAJD,CAIE,OAAMgB,CAAN,EAAQ;AACR,aAAQA,CAAR;AACD;AACF,GAnBM,EAoBNF,IApBM,CAoBAhB,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAtBM,EAuBNmB,KAvBM,CAuBCC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAvBT,CAAP;AAwBD,CA1BI;AA4BL,OAAO,MAAMC,KAAK,GAAG,SAAyB;AAAA,MAAvB;AAACf,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAuB;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAZ;AACA,SAAOG,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AACjCa,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAN2B,GAAvB,CAAL,CAWNS,IAXM,CAWDhB,GAAG,IAAIA,GAAG,CAACE,IAAJ,EAXN,EAYRc,IAZQ,CAYFM,IAAD,IAAU;AACd;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,KAAnC;AACD,GAfQ,CAAP;AAgBD,CAlBM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n  function checkResponse(res) {\n    if (res.status === 200){\n      return res.json();\n    }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n        \n \nexport const register = ( {password, email} ) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n  }; \n\n  export const login = ( {password, email} ) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    })\n    .then(res => res.json())\n  .then((data) => {\n    // сохраняем токен\n    localStorage.setItem('token', data.token);\n  }); \n  }\n"]},"metadata":{},"sourceType":"module"}