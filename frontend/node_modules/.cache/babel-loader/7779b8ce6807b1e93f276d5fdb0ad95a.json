{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}export var register=function register(_ref){var password=_ref.password,email=_ref.email;console.log({password:password,email:email});return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){console.log(res);return checkResponse(res);});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(response){return response.json();}).then(function(data){if(data.token){localStorage.setItem('token',data.token);return data.token;}}).catch(function(err){return console.log(err);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};","map":{"version":3,"sources":["/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","authorize","response","data","token","localStorage","setItem","catch","err","getContent"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEL,QAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA4B,CAC1B,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACC,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACH,CAEH,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAyB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CAC7CC,OAAO,CAACC,GAAR,CAAY,CAACH,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAZ,EACA,MAAOG,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CACjCc,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBT,QAAQ,CAAEA,QADS,CAEnBC,KAAK,CAAEA,KAFY,CAAf,CAN2B,CAAvB,CAAL,CAUJS,IAVI,CAUC,SAACjB,GAAD,CAAS,CACfS,OAAO,CAACC,GAAR,CAAYV,GAAZ,EACA,MAAOD,CAAAA,aAAa,CAACC,GAAD,CAApB,CACD,CAbM,CAAP,CAcD,CAhBI,CAkBP,MAAO,IAAMkB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACX,QAAD,CAAWC,KAAX,CAAqB,CAC5C,MAAOG,CAAAA,KAAK,WAAIb,QAAJ,YAAuB,CACjCc,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACT,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CAN2B,CAAvB,CAAL,CAQNS,IARM,CAQA,SAAAE,QAAQ,QAAIA,CAAAA,QAAQ,CAACjB,IAAT,EAAJ,EARR,EASNe,IATM,CASD,SAACG,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,KAAT,CAAe,CACbC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACC,KAAnC,EACA,MAAOD,CAAAA,IAAI,CAACC,KAAZ,CACD,CACF,CAdM,EAeNG,KAfM,CAeA,SAAAC,GAAG,QAAIhB,CAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAAJ,EAfH,CAAP,CAgBD,CAjBM,CAoBP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,CAAW,CACnC,MAAOV,CAAAA,KAAK,WAAIb,QAAJ,cAAyB,CACnCc,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2BQ,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAOJJ,IAPI,CAOC,SAACjB,GAAD,CAAS,CACf,MAAOD,CAAAA,aAAa,CAACC,GAAD,CAApB,CACD,CATM,CAAP,CAUD,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n  function checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n        \nexport const register = ( {password, email} ) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    }).then((res) => {\n      console.log(res);\n      return checkResponse(res);\n    });\n  }; \n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.token){\n      localStorage.setItem('token', data.token);\n      return data.token; \n    } \n  })\n  .catch(err => console.log(err))\n};\n  \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },  \n  }).then((res) => {\n    return checkResponse(res);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}