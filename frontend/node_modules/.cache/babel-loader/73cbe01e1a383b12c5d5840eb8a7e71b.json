{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/mesto-react/react_mesto/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick,\n    onCardLike\n  } = _ref;\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `...`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card__image\",\n          alt: card.name,\n          src: card.link,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card__text\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__likes-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `card__like-button ${isLiked && 'card__like-button_active'}`,\n            type: \"button\",\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card__counter\",\n            children: card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n/*\n// Определяем, являемся ли мы владельцем текущей карточки\nconst isOwn = card.owner._id === currentUser._id;\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\nconst cardDeleteButtonClassName = (\n`card__trush-button ${isOwn ? 'card__trush-button' : 'card__trush-button_hidden'}`\n); \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","onCardClick","onCardLike","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleLike","name","link","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;;;AAGA,SAASC,IAAT,OAA+C;AAAA;;AAAA,MAAjC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA;AAApB,GAAiC;AAE7C,QAAMC,WAAW,GAAGN,KAAK,CAACO,UAAN,CAAiBN,kBAAjB,CAApB,CAF6C,CAI7C;;AACA,QAAMO,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C,CAL6C,CAM7C;;AACA,QAAMC,OAAO,GAAGR,IAAI,CAACS,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACJ,GAAF,KAAUJ,WAAW,CAACI,GAA3C,CAAhB,CAP6C,CAQ7C;;AACA,QAAMK,uBAAuB,GAAI,KAAjC;;AAEA,WAASC,WAAT,GAAuB;AACrBZ,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD;;AAED,WAASc,UAAT,GAAsB;AACpBZ,IAAAA,UAAU,CAACF,IAAD,CAAV;AACD;;AAEC,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AACO,UAAA,GAAG,EAAIA,IAAI,CAACe,IADnB;AAEO,UAAA,GAAG,EAAIf,IAAI,CAACgB,IAFnB;AAGO,UAAA,OAAO,EAAEH;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,SAAS,EAAG,uBAAsBR,KAAK,GAAG,qBAAH,GAA2B,2BAA4B,EAAtG;AAAyG,UAAA,IAAI,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BL,IAAI,CAACe;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAG,qBAAoBP,OAAO,IAAI,0BAA2B,EAA9E;AACQ,YAAA,IAAI,EAAC,QADb;AAEQ,YAAA,OAAO,EAAEM;AAFjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,sBAA8Bd,IAAI,CAACS,KAAL,CAAWQ;AAAzC;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAwBA;;GA3CKlB,I;;KAAAA,I;AA6CN,eAAeA,IAAf;AAGA;AACH;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\n\n\nfunction Card({card, onCardClick, onCardLike}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `...`; \n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike(card);\n  }\n\n    return ( \n      <>\n      <div className=\"card\">\n      <div className=\"card__img-container\">\n        <img className=\"card__image\" \n               alt = {card.name} \n               src = {card.link}\n               onClick={handleClick}\n        />\n        <button className={`card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`} type=\"button\"></button>\n      </div>\n      <div className=\"card__container\">\n        <h2 className=\"card__text\">{card.name}</h2>\n        <div className=\"card__likes-container\">\n          <button className={`card__like-button ${isLiked && 'card__like-button_active'}`} \n                  type=\"button\" \n                  onClick={handleLike}>\n          </button>\n          <p className=\"card__counter\">{card.likes.length}</p>\n        </div>\n      </div>\n      </div>\n      </>\n    ) \n   }\n\n   export default Card;\n\n\n   /*\n\n// Определяем, являемся ли мы владельцем текущей карточки\nconst isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\nconst cardDeleteButtonClassName = (\n  `card__trush-button ${isOwn ? 'card__trush-button' : 'card__trush-button_hidden'}`\n); \n\n*/ "]},"metadata":{},"sourceType":"module"}