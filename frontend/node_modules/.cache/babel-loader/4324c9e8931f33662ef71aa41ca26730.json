{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/mesto-react/react_mesto/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick\n  } = _ref;\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  /* const cardDeleteButtonClassName = (\n     `card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`\n   ); */\n\n  function handleCardClick() {\n    onCardClick(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card__image\",\n          alt: card.name,\n          src: card.link,\n          onClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card__text\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__likes-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"card__like-button\",\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card__counter\",\n            children: card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n/*this._cardText.textContent = this._name;\n const cardImage = this._cardImage;\n cardImage.src = this._link;\n cardImage.alt = this._name;\n this._element.querySelector('.card__counter').textContent = this._likes.length;\n  if (!(this._ownerId === this._userId)) {\n  this._deleteButton.classList.add('card__trush-button');\n  //\n  //this._element.querySelector('.card__delete-button').style.display = 'none';\n }\n  if (this._likes.find((obj) => this._userId === obj._id)) {\n   this._likeButton.classList.add('card__like-button_active');\n }\n// Определяем, являемся ли мы владельцем текущей карточки\nconst isOwn = card.owner._id === currentUser._id;\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\nconst cardDeleteButtonClassName = (\n`card__trush-button ${isOwn ? 'card__trush-button' : 'card__trush-button_hidden'}`\n); \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","onCardClick","currentUser","useContext","isOwn","owner","_id","handleCardClick","name","link","likes","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;;;AAGA,SAASC,IAAT,OAAmC;AAAA;;AAAA,MAArB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAqB;AAEjC,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBL,kBAAjB,CAApB,CAFiC,CAIjC;;AACA,QAAMM,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C,CALiC,CAOnC;;AACC;AACD;AACA;;AAEE,WAASC,eAAT,GAA2B;AACzBN,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD;;AAEC,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AACO,UAAA,GAAG,EAAIA,IAAI,CAACQ,IADnB;AAEO,UAAA,GAAG,EAAIR,IAAI,CAACS,IAFnB;AAGO,UAAA,OAAO,EAAEF;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,SAAS,EAAG,uBAAsBH,KAAK,GAAG,qBAAH,GAA2B,2BAA4B,EAAtG;AAAyG,UAAA,IAAI,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BJ,IAAI,CAACQ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,sBAA8BR,IAAI,CAACU,KAAL,CAAWC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAqBA;;GArCKZ,I;;KAAAA,I;AAuCN,eAAeA,IAAf;AAGA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\n\n\nfunction Card({card, onCardClick}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n /* const cardDeleteButtonClassName = (\n    `card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`\n  ); */\n\n  function handleCardClick() {\n    onCardClick(card);\n  }\n\n    return ( \n      <>\n      <div className=\"card\">\n      <div className=\"card__img-container\">\n        <img className=\"card__image\" \n               alt = {card.name} \n               src = {card.link}\n               onClick={handleCardClick}\n        />\n        <button className={`card__delete-button ${isOwn ? 'card__delete-button' : 'card__trush-button_hidden'}`} type=\"button\"></button>\n      </div>\n      <div className=\"card__container\">\n        <h2 className=\"card__text\">{card.name}</h2>\n        <div className=\"card__likes-container\">\n          <button className=\"card__like-button\" type=\"button\"></button>\n          <p className=\"card__counter\">{card.likes.length}</p>\n        </div>\n      </div>\n      </div>\n      </>\n    ) \n   }\n\n   export default Card;\n\n\n   /*this._cardText.textContent = this._name;\n    const cardImage = this._cardImage;\n    cardImage.src = this._link;\n    cardImage.alt = this._name;\n    this._element.querySelector('.card__counter').textContent = this._likes.length;\n\n    if (!(this._ownerId === this._userId)) {\n     this._deleteButton.classList.add('card__trush-button');\n     //\n     //this._element.querySelector('.card__delete-button').style.display = 'none';\n    }\n\n    if (this._likes.find((obj) => this._userId === obj._id)) {\n      this._likeButton.classList.add('card__like-button_active');\n    }\n\n// Определяем, являемся ли мы владельцем текущей карточки\nconst isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\nconst cardDeleteButtonClassName = (\n  `card__trush-button ${isOwn ? 'card__trush-button' : 'card__trush-button_hidden'}`\n); \n\n\n*/ "]},"metadata":{},"sourceType":"module"}