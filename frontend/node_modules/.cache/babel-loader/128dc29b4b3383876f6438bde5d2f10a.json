{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n  if (res.status === 200) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  console.log({\n    password,\n    email\n  });\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\n/*\n  export const saveToken = ({ password, email }) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    })\n    .then(res => res.json())\n  .then((data) => {\n    // сохраняем токен\n    localStorage.setItem('token', data.token);\n  }); \n  }\n\n  export const sentToken = ( {} ) => {\n    return fetch(`${BASE_URL}/signin`,{\n  method: 'GET',\n  headers: {\n    authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n    })\n}\n*/\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${'482a243d-811c-428c-9d72-a4802c45fd09'}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","checkResponse","res","status","json","Promise","reject","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","response","e","catch","err","authorize","identifier","data","jwt","localStorage","setItem","getContent","token"],"mappings":"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","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n  function checkResponse(res) {\n    if (res.status === 200){\n      return res.json();\n    }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n        \n \nexport const register = ({ password, email }) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n  }; \n/*\n  export const saveToken = ({ password, email }) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    })\n    .then(res => res.json())\n  .then((data) => {\n    // сохраняем токен\n    localStorage.setItem('token', data.token);\n  }); \n  }\n\n  export const sentToken = ( {} ) => {\n    return fetch(`${BASE_URL}/signin`,{\n  method: 'GET',\n  headers: {\n    authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n    })\n}\n*/\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.jwt){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n}; \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${'482a243d-811c-428c-9d72-a4802c45fd09'}`,\n    }\n  })\n  .then(res => res.json())\n  .then(data => data)\n} "]},"metadata":{},"sourceType":"module"}