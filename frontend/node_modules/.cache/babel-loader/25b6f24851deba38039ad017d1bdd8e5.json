{"ast":null,"code":"const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-38',\n  headers: {\n    authorization: '482a243d-811c-428c-9d72-a4802c45fd09',\n    'Content-Type': 'application/json'\n  }\n});\nexport default class Api {\n  constructor(data) {\n    this._url = data.url;\n    this._headers = data.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addUserCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeStatus(id, isLiked) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  updateUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\nexport { api };","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/utils/Api.js"],"names":["api","Api","url","headers","authorization","constructor","data","_url","_headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","setUserInfo","userData","body","JSON","stringify","name","about","getInitialCards","addUserCard","link","deleteCard","id","changeLikeStatus","isLiked","updateUserAvatar","avatar"],"mappings":"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","sourcesContent":["\nconst api = new Api({\n  url:'https://mesto.nomoreparties.co/v1/cohort-38',\n  headers: {\n    authorization: '482a243d-811c-428c-9d72-a4802c45fd09',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default class Api{\n  constructor(data){\n    this._url = data.url;\n    this._headers = data.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method:'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  setUserInfo(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method:'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  addUserCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch (`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeStatus(id, isLiked) {\n    return fetch (`${this._url}/cards/${id}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    })\n        .then(this._checkResponse);\n  }\n\n  updateUserAvatar(data) {\n    return fetch (`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n      .then(this._checkResponse);\n  }\n}\n\nexport {api};"]},"metadata":{},"sourceType":"module"}