{"ast":null,"code":"var _jsxFileName = \"/Users/varvarakorableva/mesto-react/react_mesto/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport Card from '../components/Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onCardClick,\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace\n  } = _ref;\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext); //const isAvatarOk = `...`;\n\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.putLike(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    const isDeleted = onCardDelete;\n    api.deleteCard(isOwn).then(() => {\n      setCards(cards.filter(isDeleted));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__contaner\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__avatar-button\",\n          onClick: onEditAvatar,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentUser.avatar,\n            className: \"profile__avatar\",\n            alt: \"\\u0444\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            id: \"profile__name\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__edit-button\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            type: \"button\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__job\",\n            id: \"profile__job\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"profile__add-button\",\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: onCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/varvarakorableva/mesto-react/react_mesto/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","onCardClick","onEditAvatar","onEditProfile","onAddPlace","cards","setCards","useState","currentUser","useContext","useEffect","getInitialCards","then","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","putLike","newCard","state","map","c","handleCardDelete","isOwn","owner","isDeleted","onCardDelete","deleteCard","filter","avatar","name","about"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {api} from '../utils/Api';\nimport Card from '../components/Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\n\nfunction Main({onCardClick, onEditAvatar, onEditProfile, onAddPlace}) {\n\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext);\n  //const isAvatarOk = `...`;\n\nReact.useEffect(() => {\n  api.getInitialCards()\n  .then((cards) => {\n    setCards(cards);\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n},[]);\n\nfunction handleCardLike(card) {\n  // Снова проверяем, есть ли уже лайк на этой карточке\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  // Отправляем запрос в API и получаем обновлённые данные карточки\n  api.putLike(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  });\n} \n\nfunction handleCardDelete(card) {\n  \n  const isOwn = card.owner._id === currentUser._id;\n  const isDeleted = onCardDelete;\n  api.deleteCard(isOwn).then(() => {\n      setCards(cards.filter(isDeleted));\n  });\n}\n\n  return (\n    <main>\n    <section className=\"profile\">\n      <div className=\"profile__contaner\">\n        <button type=\"button\" className=\"profile__avatar-button\" onClick={onEditAvatar}>\n          <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"фото\" />\n        </button>\n        \n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\" id=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__edit-button\" aria-label=\"Редактирование\" type=\"button\" onClick={onEditProfile}></button>\n          <p className=\"profile__job\" id=\"profile__job\">{currentUser.about}</p>\n        </div>\n        </div>\n        <button id=\"profile__add-button\" className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}></button>\n    </section>\n    \n    <section className=\"cards\">\n      {cards.map((card)=> (\n        <Card\n          key={card._id}\n          card={card}\n          onCardClick={onCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n      ))}\n    </section>\n\n    </main>\n  )\n}\n  \nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}