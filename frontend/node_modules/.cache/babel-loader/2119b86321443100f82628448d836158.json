{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  console.log({\n    password,\n    email\n  });\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => {\n    console.log(res);\n    return checkResponse(res);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(() => {\n    console.log('Дальше не работает');\n  }).then(response => response.json()).then(data => {\n    if (data) {\n      localStorage.setItem('token', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    return checkResponse(res);\n  });\n};","map":{"version":3,"sources":["/Users/varvarakorableva/Desktop/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","console","log","fetch","method","headers","body","JSON","stringify","then","authorize","response","data","localStorage","setItem","jwt","catch","err","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEL,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACC,SAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH;;AAEH,OAAO,MAAMC,QAAQ,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAwB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAZ;AACA,SAAOG,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AACjCc,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,KAAK,EAAEA;AAFY,KAAf;AAN2B,GAAvB,CAAL,CAUJS,IAVI,CAUEjB,GAAD,IAAS;AACfS,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACA,WAAOD,aAAa,CAACC,GAAD,CAApB;AACD,GAbM,CAAP;AAcD,CAhBI;AAkBP,OAAO,MAAMkB,SAAS,GAAG,CAACX,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOG,KAAK,CAAE,GAAEb,QAAS,SAAb,EAAuB;AACjCc,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAN2B,GAAvB,CAAL,CAQNS,IARM,CAQA,MAAI;AAACR,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAAkC,GARvC,EASNO,IATM,CASAE,QAAQ,IAAIA,QAAQ,CAACjB,IAAT,EATZ,EAUNe,IAVM,CAUAG,IAAD,IAAU;AACd,QAAIA,IAAJ,EAAS;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,GAAnC;AACA,aAAOH,IAAP;AACD;AACF,GAfM,EAgBNI,KAhBM,CAgBAC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAhBP,CAAP;AAiBD,CAlBM;AAqBP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAOhB,KAAK,CAAE,GAAEb,QAAS,WAAb,EAAyB;AACnCc,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASc,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAOJV,IAPI,CAOEjB,GAAD,IAAS;AACf,WAAOD,aAAa,CAACC,GAAD,CAApB;AACD,GATM,CAAP;AAUD,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n  function checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n        \nexport const register = ({ password, email }) => {\n    console.log({password, email})\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email \n        })\n    }).then((res) => {\n      console.log(res);\n      return checkResponse(res);\n    });\n  }; \n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then (()=>{console.log('Дальше не работает')})\n  .then((response => response.json()))\n  .then((data) => {\n    if (data){\n      localStorage.setItem('token', data.jwt);\n      return data;\n    } \n  })\n  .catch(err => console.log(err))\n};\n  \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },  \n  }).then((res) => {\n    return checkResponse(res);\n  });\n};\n\n"]},"metadata":{},"sourceType":"module"}